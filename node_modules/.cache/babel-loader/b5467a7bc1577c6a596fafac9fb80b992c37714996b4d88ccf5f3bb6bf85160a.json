{"ast":null,"code":"import { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, updateProfile, setPersistence, browserSessionPersistence } from \"firebase/auth\";\nimport { auth } from \"./firebase\";\nexport const register = async (email, password, username) => {\n  try {\n    console.log(\"Attempting to register user with email:\", email);\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    const user = userCredential.user;\n    console.log(\"User created successfully, updating profile...\");\n    // Update the user's profile with the username\n    await updateProfile(user, {\n      displayName: username\n    });\n    console.log(\"User registered successfully:\", user);\n    return user;\n  } catch (error) {\n    console.error(\"Registration error in auth.js:\", error);\n    console.error(\"Error code:\", error.code);\n    console.error(\"Error message:\", error.message);\n    throw error;\n  }\n};\nexport const login = async (email, password) => {\n  try {\n    console.log(\"Login function called in auth.js with email:\", email);\n\n    // Set persistence to SESSION\n    await setPersistence(auth, browserSessionPersistence);\n    console.log(\"Attempting to sign in with Firebase...\");\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\n    console.log(\"Sign in successful, user:\", userCredential.user);\n    return userCredential.user;\n  } catch (error) {\n    console.error(\"Login error in auth.js:\", error);\n    console.error(\"Error code:\", error.code);\n    console.error(\"Error message:\", error.message);\n    console.error(\"Full error object:\", JSON.stringify(error, null, 2));\n    throw error;\n  }\n};\nexport const logout = async () => {\n  try {\n    await signOut(auth);\n  } catch (error) {\n    console.error(\"Logout error:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","updateProfile","setPersistence","browserSessionPersistence","auth","register","email","password","username","console","log","userCredential","user","displayName","error","code","message","login","JSON","stringify","logout"],"sources":["/Users/amandahoadley/news-explorer-frontend/src/utils/auth.js"],"sourcesContent":["import {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  updateProfile,\n  setPersistence,\n  browserSessionPersistence,\n} from \"firebase/auth\";\nimport { auth } from \"./firebase\";\n\nexport const register = async (email, password, username) => {\n  try {\n    console.log(\"Attempting to register user with email:\", email);\n    const userCredential = await createUserWithEmailAndPassword(\n      auth,\n      email,\n      password\n    );\n    const user = userCredential.user;\n\n    console.log(\"User created successfully, updating profile...\");\n    // Update the user's profile with the username\n    await updateProfile(user, {\n      displayName: username,\n    });\n\n    console.log(\"User registered successfully:\", user);\n    return user;\n  } catch (error) {\n    console.error(\"Registration error in auth.js:\", error);\n    console.error(\"Error code:\", error.code);\n    console.error(\"Error message:\", error.message);\n    throw error;\n  }\n};\n\nexport const login = async (email, password) => {\n  try {\n    console.log(\"Login function called in auth.js with email:\", email);\n\n    // Set persistence to SESSION\n    await setPersistence(auth, browserSessionPersistence);\n\n    console.log(\"Attempting to sign in with Firebase...\");\n    const userCredential = await signInWithEmailAndPassword(\n      auth,\n      email,\n      password\n    );\n    console.log(\"Sign in successful, user:\", userCredential.user);\n\n    return userCredential.user;\n  } catch (error) {\n    console.error(\"Login error in auth.js:\", error);\n    console.error(\"Error code:\", error.code);\n    console.error(\"Error message:\", error.message);\n    console.error(\"Full error object:\", JSON.stringify(error, null, 2));\n    throw error;\n  }\n};\n\nexport const logout = async () => {\n  try {\n    await signOut(auth);\n  } catch (error) {\n    console.error(\"Logout error:\", error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,SACEA,8BAA8B,EAC9BC,0BAA0B,EAC1BC,OAAO,EACPC,aAAa,EACbC,cAAc,EACdC,yBAAyB,QACpB,eAAe;AACtB,SAASC,IAAI,QAAQ,YAAY;AAEjC,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,KAAK;EAC3D,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEJ,KAAK,CAAC;IAC7D,MAAMK,cAAc,GAAG,MAAMb,8BAA8B,CACzDM,IAAI,EACJE,KAAK,EACLC,QACF,CAAC;IACD,MAAMK,IAAI,GAAGD,cAAc,CAACC,IAAI;IAEhCH,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;IAC7D;IACA,MAAMT,aAAa,CAACW,IAAI,EAAE;MACxBC,WAAW,EAAEL;IACf,CAAC,CAAC;IAEFC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEE,IAAI,CAAC;IAClD,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtDL,OAAO,CAACK,KAAK,CAAC,aAAa,EAAEA,KAAK,CAACC,IAAI,CAAC;IACxCN,OAAO,CAACK,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC9C,MAAMF,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMG,KAAK,GAAG,MAAAA,CAAOX,KAAK,EAAEC,QAAQ,KAAK;EAC9C,IAAI;IACFE,OAAO,CAACC,GAAG,CAAC,8CAA8C,EAAEJ,KAAK,CAAC;;IAElE;IACA,MAAMJ,cAAc,CAACE,IAAI,EAAED,yBAAyB,CAAC;IAErDM,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;IACrD,MAAMC,cAAc,GAAG,MAAMZ,0BAA0B,CACrDK,IAAI,EACJE,KAAK,EACLC,QACF,CAAC;IACDE,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEC,cAAc,CAACC,IAAI,CAAC;IAE7D,OAAOD,cAAc,CAACC,IAAI;EAC5B,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/CL,OAAO,CAACK,KAAK,CAAC,aAAa,EAAEA,KAAK,CAACC,IAAI,CAAC;IACxCN,OAAO,CAACK,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC9CP,OAAO,CAACK,KAAK,CAAC,oBAAoB,EAAEI,IAAI,CAACC,SAAS,CAACL,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IACnE,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMM,MAAM,GAAG,MAAAA,CAAA,KAAY;EAChC,IAAI;IACF,MAAMpB,OAAO,CAACI,IAAI,CAAC;EACrB,CAAC,CAAC,OAAOU,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACrC,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}