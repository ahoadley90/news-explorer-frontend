{"ast":null,"code":"// This file will contain your API calls\nconst BASE_URL = \"https://newsapi.org/v2\";\nconst API_KEY = process.env.REACT_APP_NEWS_API_KEY;\nconst newsApiBaseUrl = process.env.NODE_ENV === \"production\" ? \"https://nomoreparties.co/news/v2/everything\" : \"https://newsapi.org/v2/everything\";\nexport const getNews = async keyword => {\n  if (!keyword.trim()) {\n    throw new Error(\"Keyword is empty\");\n  }\n  const today = new Date();\n  const sevenDaysAgo = new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000);\n  const url = new URL(newsApiBaseUrl);\n  url.searchParams.append('q', keyword);\n  url.searchParams.append('from', sevenDaysAgo.toISOString().split('T')[0]);\n  url.searchParams.append('to', today.toISOString().split('T')[0]);\n  url.searchParams.append('pageSize', '100');\n  url.searchParams.append('apiKey', API_KEY);\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error('News API request failed');\n    }\n    const data = await response.json();\n    return data.articles;\n  } catch (error) {\n    console.error('Error fetching news:', error);\n    throw error;\n  }\n};\n\n// Add more API calls as needed","map":{"version":3,"names":["BASE_URL","API_KEY","process","env","REACT_APP_NEWS_API_KEY","newsApiBaseUrl","NODE_ENV","getNews","keyword","trim","Error","today","Date","sevenDaysAgo","getTime","url","URL","searchParams","append","toISOString","split","response","fetch","ok","data","json","articles","error","console"],"sources":["/Users/amandahoadley/news-explorer-frontend/src/utils/api.js"],"sourcesContent":["// This file will contain your API calls\nconst BASE_URL = \"https://newsapi.org/v2\";\nconst API_KEY = process.env.REACT_APP_NEWS_API_KEY;\nconst newsApiBaseUrl = process.env.NODE_ENV === \"production\" \n  ? \"https://nomoreparties.co/news/v2/everything\"\n  : \"https://newsapi.org/v2/everything\";\n\nexport const getNews = async (keyword) => {\n  if (!keyword.trim()) {\n    throw new Error(\"Keyword is empty\");\n  }\n\n  const today = new Date();\n  const sevenDaysAgo = new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000);\n\n  const url = new URL(newsApiBaseUrl);\n  url.searchParams.append('q', keyword);\n  url.searchParams.append('from', sevenDaysAgo.toISOString().split('T')[0]);\n  url.searchParams.append('to', today.toISOString().split('T')[0]);\n  url.searchParams.append('pageSize', '100');\n  url.searchParams.append('apiKey', API_KEY);\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error('News API request failed');\n    }\n    const data = await response.json();\n    return data.articles;\n  } catch (error) {\n    console.error('Error fetching news:', error);\n    throw error;\n  }\n};\n\n// Add more API calls as needed\n"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG,wBAAwB;AACzC,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AAClD,MAAMC,cAAc,GAAGH,OAAO,CAACC,GAAG,CAACG,QAAQ,KAAK,YAAY,GACxD,6CAA6C,GAC7C,mCAAmC;AAEvC,OAAO,MAAMC,OAAO,GAAG,MAAOC,OAAO,IAAK;EACxC,IAAI,CAACA,OAAO,CAACC,IAAI,CAAC,CAAC,EAAE;IACnB,MAAM,IAAIC,KAAK,CAAC,kBAAkB,CAAC;EACrC;EAEA,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;EACxB,MAAMC,YAAY,GAAG,IAAID,IAAI,CAACD,KAAK,CAACG,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;EAExE,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAACX,cAAc,CAAC;EACnCU,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,GAAG,EAAEV,OAAO,CAAC;EACrCO,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,MAAM,EAAEL,YAAY,CAACM,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACzEL,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,IAAI,EAAEP,KAAK,CAACQ,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAChEL,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,UAAU,EAAE,KAAK,CAAC;EAC1CH,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,QAAQ,EAAEjB,OAAO,CAAC;EAE1C,IAAI;IACF,MAAMoB,QAAQ,GAAG,MAAMC,KAAK,CAACP,GAAG,CAAC;IACjC,IAAI,CAACM,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIb,KAAK,CAAC,yBAAyB,CAAC;IAC5C;IACA,MAAMc,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACE,QAAQ;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}