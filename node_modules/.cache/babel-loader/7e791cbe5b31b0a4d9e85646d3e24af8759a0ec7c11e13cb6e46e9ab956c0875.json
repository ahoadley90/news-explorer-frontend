{"ast":null,"code":"import { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, updateProfile, setPersistence, browserLocalPersistence } from \"firebase/auth\";\nimport { auth } from \"./firebase\";\nexport const register = async (email, password, username) => {\n  try {\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    await updateProfile(userCredential.user, {\n      displayName: username\n    });\n\n    // Wait for the auth state to be fully updated\n    return new Promise(resolve => {\n      const unsubscribe = auth.onAuthStateChanged(user => {\n        if (user) {\n          unsubscribe();\n          resolve(userCredential);\n        }\n      });\n    });\n  } catch (error) {\n    console.error(\"Registration error:\", error);\n    throw error;\n  }\n};\nexport const login = async (email, password) => {\n  try {\n    console.log(\"Login function called in auth.js with email:\", email);\n\n    // Set persistence to LOCAL\n    await setPersistence(auth, browserLocalPersistence);\n    console.log(\"Attempting to sign in with Firebase...\");\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\n    console.log(\"Sign in successful, userCredential:\", JSON.stringify(userCredential, null, 2));\n\n    // Wait for the auth state to be fully updated\n    return new Promise(resolve => {\n      const unsubscribe = auth.onAuthStateChanged(user => {\n        if (user) {\n          unsubscribe();\n          resolve(userCredential);\n        }\n      });\n    });\n  } catch (error) {\n    console.error(\"Login error in auth.js:\", error);\n    throw error;\n  }\n};\nexport const logout = async () => {\n  try {\n    await signOut(auth);\n  } catch (error) {\n    console.error(\"Logout error:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","updateProfile","setPersistence","browserLocalPersistence","auth","register","email","password","username","userCredential","user","displayName","Promise","resolve","unsubscribe","onAuthStateChanged","error","console","login","log","JSON","stringify","logout"],"sources":["/Users/amandahoadley/news-explorer-frontend/src/utils/auth.js"],"sourcesContent":["import {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  updateProfile,\n  setPersistence,\n  browserLocalPersistence,\n} from \"firebase/auth\";\nimport { auth } from \"./firebase\";\n\nexport const register = async (email, password, username) => {\n  try {\n    const userCredential = await createUserWithEmailAndPassword(\n      auth,\n      email,\n      password\n    );\n    await updateProfile(userCredential.user, { displayName: username });\n\n    // Wait for the auth state to be fully updated\n    return new Promise((resolve) => {\n      const unsubscribe = auth.onAuthStateChanged((user) => {\n        if (user) {\n          unsubscribe();\n          resolve(userCredential);\n        }\n      });\n    });\n  } catch (error) {\n    console.error(\"Registration error:\", error);\n    throw error;\n  }\n};\n\nexport const login = async (email, password) => {\n  try {\n    console.log(\"Login function called in auth.js with email:\", email);\n\n    // Set persistence to LOCAL\n    await setPersistence(auth, browserLocalPersistence);\n\n    console.log(\"Attempting to sign in with Firebase...\");\n    const userCredential = await signInWithEmailAndPassword(\n      auth,\n      email,\n      password\n    );\n    console.log(\n      \"Sign in successful, userCredential:\",\n      JSON.stringify(userCredential, null, 2)\n    );\n\n    // Wait for the auth state to be fully updated\n    return new Promise((resolve) => {\n      const unsubscribe = auth.onAuthStateChanged((user) => {\n        if (user) {\n          unsubscribe();\n          resolve(userCredential);\n        }\n      });\n    });\n  } catch (error) {\n    console.error(\"Login error in auth.js:\", error);\n    throw error;\n  }\n};\n\nexport const logout = async () => {\n  try {\n    await signOut(auth);\n  } catch (error) {\n    console.error(\"Logout error:\", error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,SACEA,8BAA8B,EAC9BC,0BAA0B,EAC1BC,OAAO,EACPC,aAAa,EACbC,cAAc,EACdC,uBAAuB,QAClB,eAAe;AACtB,SAASC,IAAI,QAAQ,YAAY;AAEjC,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,KAAK;EAC3D,IAAI;IACF,MAAMC,cAAc,GAAG,MAAMX,8BAA8B,CACzDM,IAAI,EACJE,KAAK,EACLC,QACF,CAAC;IACD,MAAMN,aAAa,CAACQ,cAAc,CAACC,IAAI,EAAE;MAAEC,WAAW,EAAEH;IAAS,CAAC,CAAC;;IAEnE;IACA,OAAO,IAAII,OAAO,CAAEC,OAAO,IAAK;MAC9B,MAAMC,WAAW,GAAGV,IAAI,CAACW,kBAAkB,CAAEL,IAAI,IAAK;QACpD,IAAIA,IAAI,EAAE;UACRI,WAAW,CAAC,CAAC;UACbD,OAAO,CAACJ,cAAc,CAAC;QACzB;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,KAAK,GAAG,MAAAA,CAAOZ,KAAK,EAAEC,QAAQ,KAAK;EAC9C,IAAI;IACFU,OAAO,CAACE,GAAG,CAAC,8CAA8C,EAAEb,KAAK,CAAC;;IAElE;IACA,MAAMJ,cAAc,CAACE,IAAI,EAAED,uBAAuB,CAAC;IAEnDc,OAAO,CAACE,GAAG,CAAC,wCAAwC,CAAC;IACrD,MAAMV,cAAc,GAAG,MAAMV,0BAA0B,CACrDK,IAAI,EACJE,KAAK,EACLC,QACF,CAAC;IACDU,OAAO,CAACE,GAAG,CACT,qCAAqC,EACrCC,IAAI,CAACC,SAAS,CAACZ,cAAc,EAAE,IAAI,EAAE,CAAC,CACxC,CAAC;;IAED;IACA,OAAO,IAAIG,OAAO,CAAEC,OAAO,IAAK;MAC9B,MAAMC,WAAW,GAAGV,IAAI,CAACW,kBAAkB,CAAEL,IAAI,IAAK;QACpD,IAAIA,IAAI,EAAE;UACRI,WAAW,CAAC,CAAC;UACbD,OAAO,CAACJ,cAAc,CAAC;QACzB;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMM,MAAM,GAAG,MAAAA,CAAA,KAAY;EAChC,IAAI;IACF,MAAMtB,OAAO,CAACI,IAAI,CAAC;EACrB,CAAC,CAAC,OAAOY,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACrC,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}