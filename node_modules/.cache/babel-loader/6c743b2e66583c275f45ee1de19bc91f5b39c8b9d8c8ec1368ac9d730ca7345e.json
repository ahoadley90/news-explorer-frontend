{"ast":null,"code":"// This file will contain your API calls\nconst BASE_URL=\"https://newsapi.org/v2\";const API_KEY=process.env.REACT_APP_NEWS_API_KEY;const newsApiBaseUrl=process.env.NODE_ENV===\"production\"?\"https://nomoreparties.co/news/v2/everything\":\"https://newsapi.org/v2/everything\";export const getNews=async keyword=>{if(!keyword.trim()){throw new Error(\"Keyword is empty\");}const today=new Date();const sevenDaysAgo=new Date(today.getTime()-7*24*60*60*1000);const url=new URL(newsApiBaseUrl);url.searchParams.append(\"q\",keyword);url.searchParams.append(\"from\",sevenDaysAgo.toISOString().split(\"T\")[0]);url.searchParams.append(\"to\",today.toISOString().split(\"T\")[0]);url.searchParams.append(\"pageSize\",\"100\");url.searchParams.append(\"apiKey\",API_KEY);try{const response=await fetch(url);if(!response.ok){throw new Error(\"News API request failed\");}const data=await response.json();return data.articles;}catch(error){console.error(\"Error fetching news:\",error);throw error;}};// Add more API calls as needed","map":{"version":3,"names":["BASE_URL","API_KEY","process","env","REACT_APP_NEWS_API_KEY","newsApiBaseUrl","NODE_ENV","getNews","keyword","trim","Error","today","Date","sevenDaysAgo","getTime","url","URL","searchParams","append","toISOString","split","response","fetch","ok","data","json","articles","error","console"],"sources":["/Users/amandahoadley/news-explorer-frontend/src/utils/api.js"],"sourcesContent":["// This file will contain your API calls\nconst BASE_URL = \"https://newsapi.org/v2\";\nconst API_KEY = process.env.REACT_APP_NEWS_API_KEY;\nconst newsApiBaseUrl =\n  process.env.NODE_ENV === \"production\"\n    ? \"https://nomoreparties.co/news/v2/everything\"\n    : \"https://newsapi.org/v2/everything\";\n\nexport const getNews = async (keyword) => {\n  if (!keyword.trim()) {\n    throw new Error(\"Keyword is empty\");\n  }\n\n  const today = new Date();\n  const sevenDaysAgo = new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000);\n\n  const url = new URL(newsApiBaseUrl);\n  url.searchParams.append(\"q\", keyword);\n  url.searchParams.append(\"from\", sevenDaysAgo.toISOString().split(\"T\")[0]);\n  url.searchParams.append(\"to\", today.toISOString().split(\"T\")[0]);\n  url.searchParams.append(\"pageSize\", \"100\");\n  url.searchParams.append(\"apiKey\", API_KEY);\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(\"News API request failed\");\n    }\n    const data = await response.json();\n    return data.articles;\n  } catch (error) {\n    console.error(\"Error fetching news:\", error);\n    throw error;\n  }\n};\n\n// Add more API calls as needed\n"],"mappings":"AAAA;AACA,KAAM,CAAAA,QAAQ,CAAG,wBAAwB,CACzC,KAAM,CAAAC,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,CAClD,KAAM,CAAAC,cAAc,CAClBH,OAAO,CAACC,GAAG,CAACG,QAAQ,GAAK,YAAY,CACjC,6CAA6C,CAC7C,mCAAmC,CAEzC,MAAO,MAAM,CAAAC,OAAO,CAAG,KAAO,CAAAC,OAAO,EAAK,CACxC,GAAI,CAACA,OAAO,CAACC,IAAI,CAAC,CAAC,CAAE,CACnB,KAAM,IAAI,CAAAC,KAAK,CAAC,kBAAkB,CAAC,CACrC,CAEA,KAAM,CAAAC,KAAK,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACxB,KAAM,CAAAC,YAAY,CAAG,GAAI,CAAAD,IAAI,CAACD,KAAK,CAACG,OAAO,CAAC,CAAC,CAAG,CAAC,CAAG,EAAE,CAAG,EAAE,CAAG,EAAE,CAAG,IAAI,CAAC,CAExE,KAAM,CAAAC,GAAG,CAAG,GAAI,CAAAC,GAAG,CAACX,cAAc,CAAC,CACnCU,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,GAAG,CAAEV,OAAO,CAAC,CACrCO,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,MAAM,CAAEL,YAAY,CAACM,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CACzEL,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,IAAI,CAAEP,KAAK,CAACQ,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAChEL,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,UAAU,CAAE,KAAK,CAAC,CAC1CH,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,QAAQ,CAAEjB,OAAO,CAAC,CAE1C,GAAI,CACF,KAAM,CAAAoB,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACP,GAAG,CAAC,CACjC,GAAI,CAACM,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAb,KAAK,CAAC,yBAAyB,CAAC,CAC5C,CACA,KAAM,CAAAc,IAAI,CAAG,KAAM,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAD,IAAI,CAACE,QAAQ,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5C,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}